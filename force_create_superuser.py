#!/usr/bin/env python3
"""
Script para forÃ§ar criaÃ§Ã£o de superusuÃ¡rio no Railway
Este script deve ser executado DENTRO do ambiente do Railway
"""

import os
import sys
import django
from django.conf import settings
from django.contrib.auth.models import User

# Configurar Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'core.settings')
django.setup()

def create_superuser():
    """Cria superusuÃ¡rio se nÃ£o existir"""
    username = 'admin'
    password = 'admin123'
    email = 'admin@example.com'
    
    print(f"ğŸš€ Verificando se usuÃ¡rio '{username}' existe...")
    
    # Verificar se jÃ¡ existe
    if User.objects.filter(username=username).exists():
        print(f"âœ… UsuÃ¡rio '{username}' jÃ¡ existe!")
        user = User.objects.get(username=username)
        print(f"   - Ã‰ superusuÃ¡rio: {user.is_superuser}")
        print(f"   - EstÃ¡ ativo: {user.is_active}")
        print(f"   - Email: {user.email}")
        
        # Atualizar senha se necessÃ¡rio
        if not user.check_password(password):
            print(f"ğŸ”„ Atualizando senha do usuÃ¡rio...")
            user.set_password(password)
            user.save()
            print(f"âœ… Senha atualizada!")
        else:
            print(f"âœ… Senha jÃ¡ estÃ¡ correta!")
    else:
        print(f"ğŸ”¨ Criando novo superusuÃ¡rio '{username}'...")
        user = User.objects.create_superuser(
            username=username,
            email=email,
            password=password
        )
        print(f"âœ… SuperusuÃ¡rio criado com sucesso!")
    
    print(f"\nğŸ“Š EstatÃ­sticas do banco:")
    print(f"   - Total de usuÃ¡rios: {User.objects.count()}")
    print(f"   - SuperusuÃ¡rios: {User.objects.filter(is_superuser=True).count()}")
    
    # Listar todos os usuÃ¡rios
    print(f"\nğŸ‘¥ Todos os usuÃ¡rios:")
    for u in User.objects.all():
        print(f"   - {u.username} (super: {u.is_superuser}, ativo: {u.is_active})")

if __name__ == "__main__":
    create_superuser() 